// Generated by protod v0.3.3
import {
  FieldSet,
  fromBytes,
  fromJSON,
  JSON,
  repeatedField,
  toBytes,
  toJSON,
} from "../mod.ts";

export class Bar {
  constructor(init = {}) {}

  static fields = {};

  static fromBytes(): Bar {
    return new Bar();
  }

  static fromJSON(): Bar {
    return new Bar();
  }

  toBytes(): Uint8Array {
    return Uint8Array.of();
  }

  toJSON() {
    return {};
  }
}

export class Foo {
  thing: Bar;
  things: Bar[];

  constructor(init: Partial<Foo>) {
    this.thing = init.thing ?? new Bar({});
    this.things = init.things ?? [];
  }

  static fields: FieldSet<Foo> = {
    thing: [1, Bar],
    things: [2, repeatedField(Bar)],
  };

  static fromBytes(bytes: Uint8Array): Foo {
    return new Foo(
      fromBytes<Foo>(bytes, Foo.fields),
    );
  }

  static fromJSON(json: JSON): Foo {
    return new Foo(
      fromJSON<Foo>(json, Foo.fields),
    );
  }

  toBytes(): Uint8Array {
    return toBytes<Foo>(this, Foo.fields);
  }

  toJSON() {
    return toJSON<Foo>(this, Foo.fields);
  }
}
